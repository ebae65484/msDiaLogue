[{"path":"https://uconn-scs.github.io/msDiaLogue/articles/template.html","id":"load-r-package","dir":"Articles","previous_headings":"","what":"Load R package","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"uconn-scs/msDiaLogue\") ##  ## ── R CMD build ───────────────────────────────────────────────────────────────── ## * checking for file ‘/private/var/folders/yd/khpnz9fj6h524w6qys8n8vt80000gn/T/RtmpIGAfbx/remotes75ac3d1dae80/uconn-scs-msDiaLogue-8a27917/DESCRIPTION’ ... OK ## * preparing ‘msDiaLogue’: ## * checking DESCRIPTION meta-information ... OK ## * checking for LF line-endings in source and make files and shell scripts ## * checking for empty or unneeded directories ## Removed empty directory ‘msDiaLogue/tests’ ## * building ‘msDiaLogue_0.0.1.tar.gz’ library(msDiaLogue)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/template.html","id":"preprocessing","dir":"Articles","previous_headings":"","what":"Preprocessing","title":"A Usage Template for the R Package msDiaLogue","text":"Read file Toy_Spectronaut_Data.csv R. Omit observations NaN, save removed data file preprocess_Filtered_Out_NaN.csv current working directory. Filter proteins fewer \\(2\\) unique peptides, save removed data file preprocess_Filtered_Out_Unique.csv current working directory. proteins without names, replace blank protein name entries protein accessions.","code":"fileName <- \"../tests/testData/Toy_Spectronaut_Data.csv\" data <- preprocessing(fileName, filterNaN = TRUE, filterUnique = 2,                       replaceBlank = TRUE, saveRm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/template.html","id":"transformation","dir":"Articles","previous_headings":"","what":"Transformation","title":"A Usage Template for the R Package msDiaLogue","text":"Raw intensity measurements, often unsuitable direct statistical modeling, prompt transformation quantitative proteomics workflow. preferred solution log-transformation, effectively addressing issue. log\\(_2\\) transformation commonly employed due ability facilitate straightforward interpretation fold changes protein levels.","code":"dataTran <- transform(data, logFold = 2)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/template.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"A Usage Template for the R Package msDiaLogue","text":"various reasons, contamination, lack informativeness, identification samples, etc., data filtered conducting differential analysis exclude certain proteins. example, protein ‘XPO4_HUMAN’ chosen filtered . removeList = TRUE indicates removal proteins listed listName dataTran. Please note saveRm = TRUE, excluded data (“XPO4_HUMAN”) saved .csv file named filtered_out_data.csv current working directory. Alternatively, wish retain proteins like “PA1B2_HUMAN”, “TEBP_HUMAN”, “UAP1_HUMAN”, simply set removelist = FLASE.","code":"dataFilt <- filterOutIn(dataTran, listName = \"XPO4_HUMAN\",                         removeList = TRUE, saveRm = TRUE) filterOutIn(dataTran, listName = c(\"PA1B2_HUMAN\", \"TEBP_HUMAN\", \"UAP1_HUMAN\"), removeList = FALSE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/template.html","id":"imputation","dir":"Articles","previous_headings":"","what":"Imputation","title":"A Usage Template for the R Package msDiaLogue","text":"Mass spectrometry-based quantitative proteomics experiments often yield data missing values, potentially impacting downstream analyses. Various imputation methods developed address issue. far, package provides two imputation methods use: “LocalMinVal”: replaces missing values lowest value protein condition combination; “GlobalMinVal”: replaces missing values lowest value found within entire dataset. Additional methods added later. example, impute NA value dataTran using “LocalMinVal,” set required percentage values must present given protein condition combination values imputed \\(51\\%\\). imputation, may still NA values consequently need filtered . saveRm = TRUE indicates filtered data saved .csv file named filtered_NA_data.csv current working directory. dataImput follows:","code":"dataImput <- impute(dataFilt, imputeType = \"LocalMinVal\",                     reqPercentPresent = 51, reportImputing = FALSE) dataImput <- filterNA(dataImput, saveRm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/template.html","id":"normalization","dir":"Articles","previous_headings":"","what":"Normalization","title":"A Usage Template for the R Package msDiaLogue","text":"Normalization designed address systematic biases, enhancing comparability samples preserving signal. Various normalization approaches proposed. far, package provides three normalization methods use: “quant”: Quantile “median”: Column-wise Median “mean”: Column-wise Mean Quantile normalization generally recommended.","code":"dataNorm <- normalize(dataImput, normalizeType = \"quant\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/template.html","id":"summarization","dir":"Articles","previous_headings":"","what":"Summarization","title":"A Usage Template for the R Package msDiaLogue","text":"Summarization proves valuable distilling meaningful insights vast intricate data, facilitating efficient identification, quantification, interpretation protein profiles within complex biological samples.","code":"dataSumm <- summarize(dataNorm, saveSumm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/template.html","id":"analysis-and-visualization","dir":"Articles","previous_headings":"","what":"Analysis And Visualization","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"analysis1 <- analyze(dataNorm, testType = \"MA\") visualize(analysis1, graphType = \"MA\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"load-r-package","dir":"Articles","previous_headings":"","what":"Load R package","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"library(msDiaLogue)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"preprocessing","dir":"Articles","previous_headings":"","what":"Preprocessing","title":"A Usage Template for the R Package msDiaLogue","text":"function preprocessing() takes .csv file summarized protein abundances, exported Spectronaut. important columns need included file : R.Condition, R.Replicate, PG.ProteinAccessions, PG.ProteinNames, PG.IsSingleHit, PG.Quantity. function reformat data provide functionality initial filtering (based number unique peptides). 1. Load raw data raw data .csv file Toy_Spectronaut_Data.csv, specify fileName read raw data file R. raw data stored .RData file Toy_Spectronaut_Data.RData, first load data file directly, specify dataSet function. 2. Whether omit observations NaN NaN, stands ‘Number,’ represents protein entries condition lack measured quantitative value. 3. number unique peptides required include protein default filter proteins fewer 2 unique peptides. Removing proteins identified 1 unique peptide sequence likely representatives 1% false positive protein identifications. choose remove protein entries downstream analysis order provide confident quantitative results across identified proteome. However, can still observed original protein report Spectronaut. 4. Whether rename proteins without names accession numbers 5. Whether save removed data current working directory saveRm = TRUE, data removed step 2 (preprocess_Filtered_Out_NaN.csv) step 3 (preprocess_Filtered_Out_Unique.csv) saved current working directory. part preprocessing(), histogram \\(log_2\\)-transformed protein abundances provided. helpful way confirm data read correctly, issues numerical values protein abundances. Ideally, histogram appear fairly symmetrical (bell-shaped) without much skew towards smaller larger values. NOTE: preprocessing() perform transformation data. still need use functon transform().","code":"## if the raw data is in a .csv file fileName <- \"../tests/testData/Toy_Spectronaut_Data.csv\" dataSet <- preprocessing(fileName,                          filterNaN = TRUE, filterUnique = 2,                          replaceBlank = TRUE, saveRm = TRUE) ## if the raw data is in an .Rdata file load(\"../tests/testData/Toy_Spectronaut_Data.RData\") dataSet <- preprocessing(dataSet = Toy_Spectronaut_Data,                          filterNaN = TRUE, filterUnique = 2,                          replaceBlank = TRUE, saveRm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"transformation","dir":"Articles","previous_headings":"","what":"Transformation","title":"A Usage Template for the R Package msDiaLogue","text":"Raw intensity measurements, often unsuitable direct statistical modeling, prompt transformation quantitative proteomics workflow. preferred solution log-transformation, effectively addressing issue. log\\(_2\\) transformation commonly employed due ability facilitate straightforward interpretation fold changes protein levels.","code":"dataTran <- transform(dataSet, logFold = 2)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"A Usage Template for the R Package msDiaLogue","text":"various reasons, presence high-abundance contaminant proteins may irrelevant present analysis, lack informativeness (e.g., proteins exhibit differential abundance proteins known certainty false positive identifications one unique peptide identified), identification protein exclusively small subset samples one experimental condition, etc., recommend data filtering conducting differential analysis. application protein-level filters optional expected vary project. Case 1. Remove listed proteins retain remaining proteins example, protein “XPO4_HUMAN” chosen filtered . removeList = TRUE indicates removal proteins listed listName dataTran. Please note saveRm = TRUE, excluded data (“XPO4_HUMAN”) saved .csv file named filtered_out_data.csv current working directory. Case 2. Keep listed proteins remove rest. Alternatively, keep proteins like “PA1B2_HUMAN” “TEBP_HUMAN”, simply set removelist = FALSE.","code":"filterOutIn(dataTran, listName = \"XPO4_HUMAN\",             removeList = TRUE, saveRm = TRUE) filterOutIn(dataTran, listName = c(\"PA1B2_HUMAN\", \"TEBP_HUMAN\"),             removeList = FALSE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"normalization","dir":"Articles","previous_headings":"","what":"Normalization","title":"A Usage Template for the R Package msDiaLogue","text":"Normalization designed address systematic biases, enhancing comparability samples preserving signal. Various normalization approaches proposed. far, package provides three normalization methods use: “quant”: Quantile (Bolstad et al. 2003) “median”: Protein-wise Median “mean”: Protein-wise Mean Quantile normalization generally recommended.  Oh! message “Warning: Removed 16 rows containing non-finite values” indicates presence 16 NA (Available) values data. NA values automatically excluded generating boxplot retained actual dataset.","code":"dataNorm <- normalize(dataTran, normalizeType = \"quant\") #> Warning: Removed 16 rows containing non-finite values #> (`stat_boxplot()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"imputation","dir":"Articles","previous_headings":"","what":"Imputation","title":"A Usage Template for the R Package msDiaLogue","text":"Traditional Data-Dependent Acquisition (DDA) mass spectrometry-based quantitative proteomics datasets often yield many missing quantitative values due limits sampling frequency. Data-Independent Acquisition (DIA) helps substantially reduce number missing values compared DDA experiments, still exist due sample variability, missing values impact downstream analyses. Function dataMissing() designed summarize missingness protein, plot = TRUE indicates plotting missingness, show_labels = TRUE means protein names displayed printed plot. Note visual representation generated default, plot generation time varies project size.  percentage protein labels represents proportion missing data samples protein. instance, label “XPO4_HUMAN (80%)” indicates , within observations protein “XPO4_HUMAN”, 80% data missing. Additionally, percentage legend represents proportion missing data whole dataset. case, 8.4% data dataNorm missing. Regardless plot generation, function dataMissing() always returns table providing following information: count_miss: count missing values protein. pct-miss: percentage missing values protein. pct_total_miss: percentage missing values protein relative total missing values entire dataset. example, case protein “XPO4_HUMAN,” 8 NA values samples, representing 80% missing data “XPO4_HUMAN” within sample 50% total missing data entire dataset. Various imputation methods developed address missing-value issue assign quantitative value proteins missing quantitative values. far, package provides five imputation methods use: “LocalMinVal”: Replaces missing values lowest value corresponding protein condition combination; “GlobalMinVal”: Replaces missing values lowest value found within entire dataset. “knn”: Replaces missing values using k-nearest neighbors algorithm (Troyanskaya et al. 2001). “seq-knn”: Replaces missing values using sequential k-nearest neighbors algorithm (Kim, Kim, Yi 2004). “trunc-knn”: Replaces missing values using truncated k-nearest neighbors algorithm (Shah et al. 2017). Additional methods added later. “LocalMinVal” currently default method. example, impute NA value dataNorm using “LocalMinVal,” set required percentage values must present given protein condition combination values imputed 51%. reportImputing = TRUE, returned result structure altered list, adding shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. imputation, may still NA values consequently need filtered . saveRm = TRUE indicates filtered data saved .csv file named filtered_NA_data.csv current working directory. dataImput follows:","code":"dataMissing <- dataMissing(dataNorm, plot = TRUE, show_labels = TRUE) dataImput <- impute(dataNorm, imputeType = \"LocalMinVal\",                     reqPercentPresent = 0.51, reportImputing = FALSE) dataImput <- filterNA(dataImput, saveRm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"summarization","dir":"Articles","previous_headings":"","what":"Summarization","title":"A Usage Template for the R Package msDiaLogue","text":"Summarization proves valuable distilling meaningful insights vast intricate data, facilitating efficient identification, quantification, interpretation protein profiles within complex biological samples. column “Stat” generated result includes following statistics: n: number. mean: mean. sd: standard deviation. median: median. trimmed: trimmed mean trim 0.1. mad: median absolute deviation (median). min: minimum. max: maximum. range: difference maximum minimum value. skew: skewness. kurtosis: kurtosis. se: standard error.","code":"dataSumm <- summarize(dataImput, saveSumm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"A Usage Template for the R Package msDiaLogue","text":"function analyze() calculates results can used subsequent visualizations. two conditions exist data, precisely two conditions comparison must specified via argument conditions.","code":"cond <- c(\"50fmol\", \"100fmol\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"students-t-test","dir":"Articles","previous_headings":"Analysis","what":"Student’s t-test","title":"A Usage Template for the R Package msDiaLogue","text":"Student’s t-test used compare means two conditions protein, reporting difference means conditions (calculated Condition 1 - Condition 2) P-value test. Oops! warning message shows “Data essentially constant,” means data contain proteins value samples. case, P-value t-test returns NA.","code":"anlys_t <- analyze(dataImput, conditions = cond, testType = \"t-test\") #> Data are essentially constant. #> Data are essentially constant."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"moderated-t-test","dir":"Articles","previous_headings":"Analysis","what":"Moderated t-test","title":"A Usage Template for the R Package msDiaLogue","text":"main distinction Student’s moderated t-tests (Smyth 2004) lies variance computed. Student’s t-test calculates variance based data available protein individually, moderated t-test utilizes information chosen proteins calculate variance. moderated t-test, warning message might occur stating, “Zero sample variances detected, offset away zero.” warning corresponds examples proteins exhibited identical quant values, either pre- post-imputation, therefore variance present across conditions proteins. impede downstream analysis; merely serves alert users occurrence.","code":"anlys_mod.t <- analyze(dataImput, conditions = cond, testType = \"mod.t-test\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"ma","dir":"Articles","previous_headings":"Analysis","what":"MA","title":"A Usage Template for the R Package msDiaLogue","text":"result testType = \"MA\" generate data plotting MA plot, represents protein-wise averages within condition.","code":"anlys_MA <- analyze(dataImput, conditions = cond, testType = \"MA\")"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"heatmap","dir":"Articles","previous_headings":"Visualization","what":"heatmap","title":"A Usage Template for the R Package msDiaLogue","text":"package offers two options plotting heatmap. Option 1 utilizes source package pheatmap, capable plotting dendrogram simultaneously. default choice heatmaps package.  protein names excessively long, recommended set show_rownames = FALSE view full heatmap. Option 2 use source package ggplot2 generates ggplot object include dendrogram.  heatmap, similar colors within row indicate relatively consistent values, suggesting similar protein expression levels across different samples.","code":"visualize(dataImput, graphType = \"heatmap\",           pkg = \"pheatmap\",           cluster_cols = TRUE, cluster_rows = FALSE,           show_colnames = TRUE, show_rownames = TRUE) visualize(dataImput, graphType = \"heatmap\", pkg = \"ggplot2\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"ma-1","dir":"Articles","previous_headings":"Visualization","what":"MA","title":"A Usage Template for the R Package msDiaLogue","text":"MA plot, short “M vs. plot,” uses two axes: M axis (vertical): Represents logarithm (usually base 2) fold change, ratio expression levels, two conditions. calculated : \\[M = log_2(X/Y) = log_2 X - log_2 Y\\] axis (horizontal): Represents average intensity two conditions, calculated : \\[= \\frac{1}{2}log_2(XY) = \\frac{1}{2}\\left[log_2(X)+log_2(Y)\\right]\\] proteins expected exhibit little variation, leading majority points concentrating around line M = 0 (indicating difference group means).  M.thres = 1 means M thresholds set −1 1. scatters split three parts: significant (M > 1), significant (-1 \\(\\leq\\) M \\(\\leq\\) 1), significant (M < -1). transformLabel = \"Log2\" used label title. Additionally, warning message “Removed 16 rows containing missing values” indicates 16 proteins significance.","code":"visualize(anlys_MA, graphType = \"MA\", M.thres = 1, transformLabel = \"Log2\") #> Warning: Removed 16 rows containing missing values #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"normalize","dir":"Articles","previous_headings":"Visualization","what":"Normalize","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"visualize(dataNorm, graphType = \"normalize\") #> Warning: Removed 16 rows containing non-finite values #> (`stat_boxplot()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"pca_scree","dir":"Articles","previous_headings":"Visualization","what":"PCA_scree","title":"A Usage Template for the R Package msDiaLogue","text":"One way help identify many Principal Components (PCs) retain, explore scree plot. scree plot shows eigenvalues principal component, represent proportion variance explained component.","code":"visualize(   dataImput[,colnames(dataImput) != c(\"TEBP_HUMAN\", \"T126B_HUMAN\")],   graphType = \"PCA_scree\",   addlabels = TRUE, choice = \"variance\", ncp = 10)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"pca_ind","dir":"Articles","previous_headings":"Visualization","what":"PCA_ind","title":"A Usage Template for the R Package msDiaLogue","text":"primary Principal Component Analysis (PCA) plot individual data visually represents distribution individual observations reduced-dimensional space, typically defined principal components. x y axes PCA plot represent principal components. axis corresponds linear combination original variables. Individual data points PCA plot represent observations (e.g., samples) original dataset. Points close origin (0, 0), close “average” across protein abundances. sufficient samples present, plot also produce 95% confidence ellipse, well centroid (mean group provided), groups (condition) provided.","code":"visualize(   dataImput[,colnames(dataImput) != c(\"TEBP_HUMAN\", \"T126B_HUMAN\")],   graphType = \"PCA_ind\",   addlabels = TRUE, addEllipses = TRUE, ellipse.level = 0.95)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"pca_var","dir":"Articles","previous_headings":"Visualization","what":"PCA_var","title":"A Usage Template for the R Package msDiaLogue","text":"plot useful analyses based relatively small number proteins. represents assocation, loading protein first two PCs. Longer arrows represents stronger associations. important note proteins weakly associated PC 1 PC2 may still highly correlated PCs plotted. Use scree plot (available methods) determing appropriate number PCs investigate.","code":"visualize(   dataImput[,colnames(dataImput) != c(\"TEBP_HUMAN\", \"T126B_HUMAN\")],   graphType = \"PCA_var\",   addlabels = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"pca_biplot","dir":"Articles","previous_headings":"Visualization","what":"PCA_biplot","title":"A Usage Template for the R Package msDiaLogue","text":"PCA biplot includes individual variable plots. , many proteins, plot can unwieldy.","code":"visualize(   dataImput[,colnames(dataImput) != c(\"TEBP_HUMAN\", \"T126B_HUMAN\")],   graphType = \"PCA_biplot\",   addEllipses = TRUE, ellipse.level = 0.95, label = \"all\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"t-test","dir":"Articles","previous_headings":"Visualization","what":"t-test","title":"A Usage Template for the R Package msDiaLogue","text":"‘visualize’ function can applied t-test output. generates two useful plots: histgram fold changes across analyzed proteins histogram p-values. expect majority proteins show small change conditions, fold change histogram peak around zero. p-values, expect p-values non-significant (0.05). Depending strength treatment effect, may peak p-values near 0.","code":"visualize(anlys_mod.t, graphType = \"t-test\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"upset","dir":"Articles","previous_headings":"Visualization","what":"Upset","title":"A Usage Template for the R Package msDiaLogue","text":"upset plot visual representation helps display overlap intersection sets categories dataset. particularly useful illustrating presence absence elements combinations sets. , can see 18 proteins common 100fmol 50fmol, 1 protein unique 100fmol.","code":"dataSort <- sortcondition(dataSet) visualize(dataSort, graphType = \"Upset\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"venn","dir":"Articles","previous_headings":"Visualization","what":"Venn","title":"A Usage Template for the R Package msDiaLogue","text":"Venn plot visual representation helps display overlap intersection sets categories dataset. particularly useful illustrating presence absence elements combinations sets. exampl , can see 100fmol 50fmol groups share 18 proteins sample. 1 protein found 100fmol group, zero unique proteins 50fmol group","code":"visualize(dataSort, graphType = \"Venn\",           show_percentage = TRUE,           fill_color = c(\"blue\", \"yellow\", \"green\", \"red\"),           show_universal = FALSE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"volcano","dir":"Articles","previous_headings":"Visualization","what":"Volcano","title":"A Usage Template for the R Package msDiaLogue","text":"One widely used proteomics plots volcano plot. x-axis represents fold change, y-value represents \\(-log_{10}p-value\\).","code":"visualize(anlys_mod.t, graphType = \"volcano\",           P.thres = 0.05, logF.thres = 0.6) #> Warning: Removed 15 rows containing missing values #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"other-useful-function","dir":"Articles","previous_headings":"","what":"Other useful function","title":"A Usage Template for the R Package msDiaLogue","text":"easily extract quantitative data single protein set proteins name processed throughout entire msDiaLogue workflow, use function pullProteinPath protein’s unique name.","code":"ZC11B <- pullProteinPath(proteinName = \"ZC11B_HUMAN\",                          dataSetList = list(Initial = dataSet,                                             Transformed = dataTran,                                             Normalized = dataNorm,                                             Imputed = dataImput))"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shiying Xiao. Author, maintainer. Timothy Moore. Author. Charles Watt. Author, contributor.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiao S, Moore T, Watt C (2023). msDiaLogue: Analysis + Visuals Data Indep. Aquisition Mass Spectrometry Data. R package version 0.0.2, https://github.com/uconn-scs/msDiaLogue.","code":"@Manual{,   title = {msDiaLogue: Analysis + Visuals for Data Indep. Aquisition Mass Spectrometry Data},   author = {Shiying Xiao and Timothy Moore and Charles Watt},   year = {2023},   note = {R package version 0.0.2},   url = {https://github.com/uconn-scs/msDiaLogue}, }"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/index.html","id":"code-building-for-workflow-package","dir":"","previous_headings":"","what":"Code building for workflow package","title":"msDiaLogue","text":"repository used build customized UConn PMF-SCS workflow Data-Independent Acquisition (DIA) proteomics data. code expanded include options users, detailed explanations steps analysis process.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"msDiaLogue","text":"can install development version msDiaLogue GitHub : Windows, RTools required build package.","code":"# install.packages(\"devtools\") devtools::install_github(\"uconn-scs/msDiaLogue\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/index.html","id":"main-areas-include","dir":"","previous_headings":"","what":"Main areas include","title":"msDiaLogue","text":"Data preprocessing: getting data Spectronaut Data transformation: options transforming abundance data Data filtering: providing options filter data based preset levels Data normalization: normalization procedures Data imputation: missing data procedures Data summary: calculating presenting numerical summaries tabular form Differential Abundance Analysis: statistical tools DIA data analysis Data visualization: providing clean visuals aid data analysis decisions","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyzing summarized data — analyze","title":"Analyzing summarized data — analyze","text":"Apply statistical test data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyzing summarized data — analyze","text":"","code":"analyze(dataSet, conditions, testType = \"t-test\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyzing summarized data — analyze","text":"dataSet 2d data set data. conditions string specifying two conditions compare. argument works two conditions dataSet. testType string (default = \"t-test\") specifying statistical test use: \"t-test\": unequal variance t-test. \"mod.t-test\": moderated t-test (Smyth, 2004). \"MA\": output plot MA plot.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyzing summarized data — analyze","text":"2d dataframe includes following information: \"t-test\" \"mod.t-test\": differences means P-values protein two conditions. Note differences calculated subtracting mean second condition mean first condition (Condition 1 - Condition 2). \"MA\": Protein-wise averages within condition.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analyzing summarized data — analyze","text":"Smyth, Gordon K. (2004). Linear Models Empirical Bayes Methods Assessing Differential Expression Microarray Experiments. Statistical Applications Genetics Molecular Biology, 3(1).","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/dataMissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Counting missing data — dataMissing","title":"Counting missing data — dataMissing","text":"Calculate plot missingness.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/dataMissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counting missing data — dataMissing","text":"","code":"dataMissing(dataSet, plot = FALSE, show_labels = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/dataMissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counting missing data — dataMissing","text":"dataSet 2d data set experimental values. plot boolean (default = FALSE) specifying whether plot missingness. show_labels boolean (default = TRUE) specifying whether protein names shown visualization plot = TRUE.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/dataMissing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counting missing data — dataMissing","text":"2d dataframe including: \"count_miss\": count missing values protein. \"pct-miss\": percentage missing values protein. \"pct_total_miss\": percentage missing values protein relative total missing values entire dataset.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering NA's post-imputation — filterNA","title":"Filtering NA's post-imputation — filterNA","text":"Remove proteins NA values.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering NA's post-imputation — filterNA","text":"","code":"filterNA(dataSet, saveRm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering NA's post-imputation — filterNA","text":"dataSet 2d data set experimental values. saveRm boolean (default = TRUE) specifying whether save removed data current working directory.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering NA's post-imputation — filterNA","text":"filtered 2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filtering NA's post-imputation — filterNA","text":"proteins meet imputation requirement removed, .csv file created removed data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterOutIn.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering proteins or contaminants — filterOutIn","title":"Filtering proteins or contaminants — filterOutIn","text":"Apply series filtering steps data set.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterOutIn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering proteins or contaminants — filterOutIn","text":"","code":"filterOutIn(dataSet, listName = c(), removeList = TRUE, saveRm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterOutIn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering proteins or contaminants — filterOutIn","text":"dataSet 2d data set experimental values. listName list proteins contaminants select remove. removeList boolean (default = TRUE) specifying whether list proteins removed selected. TRUE: Remove list proteins data set. FALSE: Remove proteins list data set. saveRm boolean (default = TRUE) specifying whether save removed data current working directory. option works removeList = TRUE.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterOutIn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering proteins or contaminants — filterOutIn","text":"filtered 2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation of raw data signals — impute","title":"Imputation of raw data signals — impute","text":"Apply imputation method data set.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation of raw data signals — impute","text":"","code":"impute(   dataSet,   imputeType = \"LocalMinVal\",   reqPercentPresent = 0.51,   k = 10,   rowmax = 0.5,   colmax = 0.8,   maxp = 1500,   rng.seed = 362436069,   reportImputing = FALSE )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation of raw data signals — impute","text":"dataSet 2d data set experimental values. imputeType string (default = \"LocalMinVal\") specifying imputation method use: \"LocalMinVal\": replace missing values lowest value protein condition combination. \"GlobalMinVal\": replace missing values lowest value found within entire data set. \"knn\": replace missing values using k-nearest neighbors algorithm (Troyanskaya et al., 2001). \"seq-knn\": replace missing values using sequential k-nearest neighbors algorithm (Kim et al., 2004). \"trunc-knn\": replace missing values using truncated k-nearest neighbors algorithm (Shah et al., 2017). reqPercentPresent numeric value (default = 0.51) specifying required percent values must present given protein condition combination values imputed imputeType = \"LocalMinVal\". k integer (default = 10) indicating number neighbors used imputation imputeType \"knn\", \"seq-knn\", \"trunc-knn\". rowmax numeric value (default = 0.5) specifying maximum percent missing data allowed row imputeType = \"knn\". rows rowmax*100% missing imputed using overall mean per sample. colmax numeric value (default = 0.8) specifying maximum percent missing data allowed column imputeType = \"knn\". column colmax*100% missing data, program halts reports error. maxp integer (default = 1500) indicating largest block proteins imputed using k-nearest neighbors algorithm imputeType = \"knn\". Larger blocks divided two-means clustering (recursively) prior imputation. rng.seed integer (default = 362436069) specifying seed used random number generator reproducibility imputeType = \"knn\". reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation of raw data signals — impute","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation of raw data signals — impute","text":"Troyanskaya, O., Cantor, M., Sherlock, G., Brown, P., Hastie, T., Tibshirani, R., Botstein, D. Altman, R. B. (2001). Missing Value Estimation Methods DNA Microarrays. Bioinformatics, 17(6), 520--525. Kim, KY., Kim, BJ. Yi, GS. (2004). Reuse Imputed Data Microarray Analysis Increases Imputation Efficiency. BMC Bioinformatics, 5, 160. Shah, J. S., Rai, S. N., DeFilippis, . P., Hill, B. G., Bhatnagar, . Brock, G. N. (2017). Distribution Based Nearest Neighbor Imputation Truncated High Dimensional Data Applications Pre-Clinical Clinical Metabolomics Studies. BMC Bioinformatics, 18, 114.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization of preprocessed data — normalize","title":"Normalization of preprocessed data — normalize","text":"Apply specified type normalization data set.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization of preprocessed data — normalize","text":"","code":"normalize(dataSet, normalizeType = \"quant\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization of preprocessed data — normalize","text":"dataSet 2d data set experimental values. normalizeType string (default = \"quant\") specifying type normalization apply: \"quant\": Quantile (Bolstad et al., 2003) \"median\": Protein-wise Median \"mean\": Protein-wise Mean \"none\": None","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization of preprocessed data — normalize","text":"normalized 2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalization of preprocessed data — normalize","text":"Quantile normalization generally recommended. Mean median normalization going included popular previous methods. normalization recommended. Boxplots also generated normalization give visual indicator changes.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalization of preprocessed data — normalize","text":"Bolstad, B. M., Irizarry, R. ., Astrand, M. Speed, T. P. (2003). Comparison Normalization Methods High Density Oligonucleotide Array Data Based Variance Bias. Bioinformatics, 19(2): 185--193.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preProcessFiltering.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering of raw data signals — preProcessFiltering","title":"Filtering of raw data signals — preProcessFiltering","text":"Apply series filtering steps data set.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preProcessFiltering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering of raw data signals — preProcessFiltering","text":"","code":"preProcessFiltering(   dataSet,   filterNaN = TRUE,   filterUnique = 2,   replaceBlank = TRUE,   saveRm = TRUE )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preProcessFiltering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering of raw data signals — preProcessFiltering","text":"dataSet 2d data set experimental values. filterNaN boolean (default = TRUE) specifying whether proteins NaN removed data set. filterUnique integer (default = 2) specifying whether proteins less default number unique peptides removed data set. replaceBlank boolean (default = TRUE) specifying whether proteins without names named accession numbers. saveRm boolean (default = TRUE) specifying whether save removed data current working directory.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preProcessFiltering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering of raw data signals — preProcessFiltering","text":"filtered 2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preProcessFiltering.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filtering of raw data signals — preProcessFiltering","text":"forms filtering recommended use cases.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading, filtering and reformatting of MS DIA data — preprocessing","title":"Loading, filtering and reformatting of MS DIA data — preprocessing","text":"Read .csv file, apply filtering conditions, select columns necessary analysis, return reformatted data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading, filtering and reformatting of MS DIA data — preprocessing","text":"","code":"preprocessing(   fileName,   dataSet = NULL,   filterNaN = TRUE,   filterUnique = 2,   replaceBlank = TRUE,   saveRm = TRUE )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading, filtering and reformatting of MS DIA data — preprocessing","text":"fileName name .csv file containing MS data (including path file, needed). dataSet raw data set, already loaded R. filterNaN boolean (default = TRUE) specifying whether observations including NaN omitted. filterUnique integer (default = 2) specifying many number unique peptides required include protein. replaceBlank boolean (default = TRUE) specifying whether proteins without names named accession numbers. saveRm boolean (default = TRUE) specifying whether save removed data current working directory.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading, filtering and reformatting of MS DIA data — preprocessing","text":"2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loading, filtering and reformatting of MS DIA data — preprocessing","text":"function executes following: Reads file. Applies applicable filters, necessary. Provides summary statistics histogram values reported data set. Selects columns contain necessary information analysis. Re-formats data present individual proteins columns group replicates protein. Stores data data.frame prints subset columns provide visual example user.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/pullProteinPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Compiling data on a single protein from each step in the process — pullProteinPath","title":"Compiling data on a single protein from each step in the process — pullProteinPath","text":"Summarize steps performed data one protein.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/pullProteinPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compiling data on a single protein from each step in the process — pullProteinPath","text":"","code":"pullProteinPath(proteinName, dataSetList)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/pullProteinPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compiling data on a single protein from each step in the process — pullProteinPath","text":"proteinName string identifying protein interest. dataSetList list data frames, order dictates order presentation.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/pullProteinPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compiling data on a single protein from each step in the process — pullProteinPath","text":"2d dataframe, protein data step present dataSetList.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/pullProteinPath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compiling data on a single protein from each step in the process — pullProteinPath","text":"proteinName must match labels data sets exactly.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/sortcondition.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","title":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","text":"Create keyed dictionary, every unique experimental condition label list every protein value condition.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/sortcondition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","text":"","code":"sortcondition(dataSet)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/sortcondition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","text":"dataSet 2d data set experimental values.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/sortcondition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","text":"list lists.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize protein intensities across conditions — summarize","title":"Summarize protein intensities across conditions — summarize","text":"Calculate mean, standard deviation, replicate count protein across every condition.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize protein intensities across conditions — summarize","text":"","code":"summarize(dataSet, saveSumm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize protein intensities across conditions — summarize","text":"dataSet data frame containing data signals labels. saveSumm boolean (default = TRUE) specifying whether save summary statistics current working directory.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize protein intensities across conditions — summarize","text":"2d summarized data frame.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize protein intensities across conditions — summarize","text":"column 'Stat' generated data.frame includes following statistics: n: number. mean: mean. sd: standard deviation. median: median. trimmed: trimmed mean trim 0.1. mad: median absolute deviation (median). min: minimum. max: maximum. range: difference maximum minimum value. skew: skewness. kurtosis: kurtosis. se: standard error.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-based transformation — transform","title":"Log-based transformation — transform","text":"Apply logarithmic transformation data stabilize variance.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-based transformation — transform","text":"","code":"transform(dataSet, logFold = 2)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-based transformation — transform","text":"dataSet data frame containing data signals. logFold integer specifying base log transformation.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-based transformation — transform","text":"transformed data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-based transformation — transform","text":"function executes following: Plots mean-variance relationship using meanVariancePlot(). Log-transforms data, using specified base. Plots mean-variance relationship comparison.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":null,"dir":"Reference","previous_headings":"","what":"Trimming down a protein FASTA file to certain proteins — trimFASTA","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"Trim FASTA file contain proteins present associated Spectronaut report file.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"","code":"trimFASTA(   FASTAFileName,   reportFileName,   outputFileName,   selectString = \"*BOVIN\" )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"FASTAFileName string indicating FASTA .txt filename. reportFileName string indicating Spectronaut report .csv filename. outputFileName string indicating name new .txt FASTA file. selectString string containing regular expression search.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"FASTA file specified proteins present.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"Depending size FASTA file, function may run slowly take several minutes. FASTA file must .txt format; formats work.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA2.0.html","id":null,"dir":"Reference","previous_headings":"","what":"Trimming down a protein FASTA file to certain proteins — trimFASTA2.0","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA2.0","text":"Trim FASTA file contain proteins present associated Spectronaut report file.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA2.0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA2.0","text":"","code":"trimFASTA2.0(   FASTAFileName,   reportFileName,   outputFileName,   selectString = \"*BOVIN\" )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA2.0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA2.0","text":"FASTAFileName string indicating FASTA .txt filename. reportFileName string indicating Spectronaut report .csv filename. outputFileName string indicating name new .txt FASTA file. selectString string containing regular expression search.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA2.0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA2.0","text":"FASTA file specified proteins present.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA2.0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA2.0","text":"Depending size FASTA file, function may run slowly take several minutes. FASTA file must .txt format; formats work.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating visualizations for MS Data — visualize","title":"Generating visualizations for MS Data — visualize","text":"Create specific graphics illustrate results data analysis function.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating visualizations for MS Data — visualize","text":"","code":"visualize(   dataSet,   graphType = \"volcano\",   pkg = \"pheatmap\",   cluster_cols = TRUE,   cluster_rows = FALSE,   show_colnames = TRUE,   show_rownames = TRUE,   M.thres = 1,   transformLabel = NULL,   addlabels = TRUE,   choice = \"variance\",   ncp = 10,   addEllipses = TRUE,   ellipse.level = 0.95,   label = \"all\",   show_percentage = TRUE,   fill_color = c(\"blue\", \"yellow\", \"green\", \"red\"),   show_universal = FALSE,   P.thres = 0.05,   logF.thres = 0.6 )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating visualizations for MS Data — visualize","text":"dataSet 2D data frame corresponds output function analyze() name. graphType string indicating graph type. Current options : \"heatmap\" \"MA\" \"normalize\" \"PCA_biplot\" \"PCA_ind\" \"PCA_scree\" \"PCA_var\" \"t-test\" \"Upset\" \"Venn\" \"volcano\" pkg string specifying source package used plot heatmap. Two options: \"pheatmap\" \"ggplot2\". argument works graphType = \"heatmap\". cluster_cols boolean (default = TRUE) determining rows clustered hclust object. argument works graphType = \"heatmap\" pkg = \"pheatmap\". cluster_rows boolean (default = FALSE) determining columns clustered hclust object. argument works graphType = \"heatmap\" pkg = \"pheatmap\". show_colnames boolean (default = TRUE) specifying column names shown. argument works graphType = \"heatmap\" pkg = \"pheatmap\". show_rownames boolean (default = TRUE) specifying row names shown. argument works graphType = \"heatmap\" pkg = \"pheatmap\". M.thres absolute threshold value M (log fold-change) (default = 1) used plot two vertical lines (-M.thres M.thres) MA plot graphType = \"MA\". transformLabel string used label title transformation type transformed MA plot graphType = \"MA\". addlabels boolean (default = TRUE) specifying whether elements labeled. graphType = \"PCA_scree\", specifies whether labels added top bars points show information retained dimension. graphType = \"PCA_ind\", specifies whether active individuals labeled. graphType = \"PCA_var\", specifies whether active variables labeled. choice text (default = \"variance\") specifying PCA data plotted scree plot graphType = \"PCA_scree\". Allowed values \"variance\" \"eigenvalue\". ncp numeric value (default = 10) specifying number dimensions shown graphType = \"PCA_scree\". addEllipses boolean (default = TRUE) specifying whether draw ellipses around individuals graphType = \"PCA_ind\" graphType = \"PCA_biplot\". ellipse.level numeric value (default = 0.95) specifying size concentration ellipse normal probability graphType = \"PCA_ind\" graphType = \"PCA_biplot\". label text (default = \"\") specifying elements labelled graphType = \"PCA_biplot\". Allowed values: \"\": label active individuals active variables. \"ind\": label active individuals. \"var\": label active variables. \"none\": labels. show_percentage boolean (default = TRUE) specifying whether show percentage set graphType = \"Venn\". fill_color text (default = c(\"blue\", \"yellow\", \"green\", \"red\")) specifying colors fill circles graphType = \"Venn\". show_universal boolean (default = FALSE) specifying whether return data.frame logical columns representing sets graphType = \"Venn\". P.thres threshold value P-value (default = 0.05) used plot horizontal line (-log10(P.thres)) volcano plot graphType = \"volcano\". logF.thres absolute threshold value log2(fold change) (default = 0.6) used plot two vertical lines (-logF.thres logF.thres) volcano plot graphType = \"volcano\".","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating visualizations for MS Data — visualize","text":"object class ggplot.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating visualizations for MS Data — visualize","text":"function visualize() designed work directly output function analyze(). Please sure arguments graphType testType match.","code":""}]
